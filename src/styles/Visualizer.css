.visualizer-wrapper {
  position: relative;
  background-color: var(--color-surface);
  border-radius: 8px;
  overflow: hidden;
  cursor: zoom-in;
  width: 100%;
  height: 0;
  padding-bottom: 56.25%; /* 16:9 aspect ratio */
  user-select: none;
}

/* Desktop: proper container fitting with accurate space calculation */
@media (min-width: 1025px) {
  .visualizer-wrapper {
    /* Reset padding-based sizing */
    height: auto;
    padding-bottom: 0;

    /* Use intrinsic sizing that respects both width and height constraints */
    aspect-ratio: 16 / 9;

    /* Key: Use CSS logic to fit within available space */
    /* Available width = viewport width - options column (400px) - gap (1rem) - padding (2rem) */
    /* Available height = viewport height - header - footer - padding */
    width: min(
      100%,
      calc((100vh - 120px) * 16 / 9),
      /* height-constrained width */ calc(100vw - 400px - 3rem)
        /* available width */
    );

    height: min(
      calc(100vh - 120px),
      /* available height */ calc((100vw - 400px - 3rem) * 9 / 16)
        /* width-constrained height */
    );

    /* Ensure it doesn't exceed container */
    max-width: 100%;
    max-height: 100%;
  }

  .visualizer-column {
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
  }
}

/* Mobile: responsive sizing */
@media (max-width: 1024px) {
  .visualizer-wrapper {
    width: 100%;
    aspect-ratio: 16 / 9;
    max-height: 35vh; /* Slightly smaller to leave more room for options */
    border-radius: 0;
    position: relative;
  }
}

@media (max-width: 768px) {
  .visualizer-wrapper {
    aspect-ratio: 4 / 3; /* More square aspect ratio for small screens */
    max-height: 30vh;
  }
}

.info-icon {
  z-index: 3;
  position: absolute;
  bottom: 0;
  right: 0;
  padding: 1rem;
  cursor: pointer;
}

.visualizer-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;

  /* --- CRITICAL CHANGE FOR CROSS-FADE --- */
  /* The transition now happens on opacity. The default opacity is 0. */
  opacity: 0;
  transition: opacity 0.4s ease-in-out;
  z-index: 2; /* The new image should always be on top */
}

.visualizer-image.loaded {
  opacity: 1;
}

.loader-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 10;

  opacity: 0;
  background-color: rgba(0, 0, 0, 0.05);
  transition: opacity 0.3s ease-in-out;
}

.loader-overlay.visible {
  opacity: 1;
}

.spinner {
  width: 50px;
  height: 50px;
  border: 5px solid rgba(128, 128, 128, 0.3);
  border-top-color: var(--color-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.lightbox-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.85);
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  box-sizing: border-box;
  z-index: 100;
  cursor: zoom-out;
  animation: fadeIn 0.3s ease-in-out;
  backdrop-filter: blur(10px);
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.lightbox-image {
  max-width: 100%;
  object-fit: contain;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
  animation: popIn 0.3s ease-out;
}

@keyframes popIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.lightbox-close-text {
  color: #fff;
  margin-top: 1rem;
  font-size: 0.9rem;
  opacity: 0.7;
}

.lightbox-loader {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 1001;
}

.lightbox-image.loading {
  opacity: 0;
}

.lightbox-image {
  transition: opacity 0.3s ease-in-out;
}
