.configurator-container {
  width: 100%;
  max-width: 1600px;
  display: flex;
  flex-direction: column;
  flex-grow: 1; 
  height: 100%;
}

.back-button {
  background: none;
  border: none;
  color: var(--color-primary);
  cursor: pointer;
  font-size: 1rem;
  padding: 0.5rem 0;
  margin-bottom: 1rem;
  align-self: flex-start;
}

.configurator-main {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  gap: 0;
  min-height: 0; 
}

.visualizer-column {
  flex-grow: 1;
  flex-shrink: 1;
  min-height: 100px;
  margin-bottom: 2rem;
}

.options-column {
  /* The options panel will not grow, but will scroll if content overflows */
  flex-grow: 0;
  flex-shrink: 0;
  overflow-y: auto;
  padding: 2rem;
  background-color: var(--color-surface);
  border-radius: 12px;
  box-shadow: 0 0px 20px var(--shadow-color);
}

/* On medium and small screens, stack the visualizer on top of the options */
@media (max-width: 1024px) {
  .configurator-main {
      grid-template-columns: 1fr;
      gap: 1rem;
  }
}

.options-column h2 {
  margin-top: 0;
  margin-bottom: 2rem;
}

.option-group {
  margin-bottom: 1.5rem;
}

.option-group label {
  display: block;
  font-weight: 600;
  margin-bottom: 1rem;
  font-size: 1.1rem;
}

.options-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(90px, 1fr));
  gap: 0.75rem;
}

.option-button {
  padding: 0.5rem 0.5rem;
  border: 1px solid var(--border-color);
  background-color: var(--color-background);
  color: var(--color-text);
  border-radius: 8px;
  cursor: pointer;
  font-size: 1rem;
  font-weight: 500;
  transition: all 0.2s ease-in-out;
  text-align: center; /* Center the text */
}

.option-button:hover {
  border-color: var(--color-primary);
  color: var(--color-primary);
}

.option-button.selected {
  background-color: var(--color-primary);
  border-color: var(--color-primary);
  color: white;
}

.option-group select {
  width: 100%;
  padding: 0.75rem;
  font-size: 1rem;
  border-radius: 4px;
  border: 1px solid var(--border-color);
  background-color: var(--color-background);
  color: var(--color-text);
  cursor: pointer;
}

.color-selector {
  display: flex;
  gap: 1.5rem;
  flex-wrap: wrap;
}

.color-option {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
  padding: 5px;
  border-radius: 5px;
  border: 2px solid transparent;
  transition: background-color 0.2s;
}

.color-option.selected {
  /* border-color: var(--color-primary); */
  background-color: var(--border-color);
}

.color-swatch {
  width: 32px;
  height: 32px;
  border-radius: 50%;
  border: 1px solid var(--border-color);
}

/* These specific colors should NOT change with the theme */
.color-swatch.black {
  background-color: #222;
}

.color-swatch.grey {
  background-color: #cccccc;
}

/* --- NEW STYLES FOR LENGTH BUTTONS --- */
.length-options-scroller {
  display: flex;
  gap: 0.75rem;
  overflow-x: auto;
  padding-bottom: 1rem; /* Space for scrollbar */
  /* Hide scrollbar visually but keep functionality */
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
}
.length-options-scroller::-webkit-scrollbar {
  display: none; /* Chrome, Safari, and Opera */
}

.length-option-button {
  flex-shrink: 0; /* Prevent buttons from shrinking */
  padding: 0.75rem 1.25rem;
  border: 1px solid var(--border-color);
  background-color: var(--color-background);
  color: var(--color-text);
  border-radius: 8px;
  cursor: pointer;
  font-size: 1rem;
  transition: all 0.2s ease-in-out;
}

.length-option-button:hover {
  border-color: var(--color-primary);
  color: var(--color-primary);
}

.length-option-button.selected {
  background-color: var(--color-primary);
  border-color: var(--color-primary);
  color: white;
}

.length-option-button:disabled {
  background-color: var(--border-color);
  color: #888;
  cursor: not-allowed;
  opacity: 0.5;
}

.add-to-cart-button {
  width: 100%;
  padding: 1rem;
  font-size: 1.1rem;
  font-weight: bold;
  color: white;
  background-color: var(--color-accent);
  border: none;
  border-radius: 5px;
  cursor: pointer;
  margin-top: 1rem;
  transition: background-color 0.2s;
}

.add-to-cart-button:hover {
  background-color: var(--color-accent-hover);
}

.add-to-cart-container {
  /* Align this container with the options column in the grid */
  grid-column: 2 / 3;
  grid-row: 2 / 3;
  padding-top: 1rem;
}

.add-to-cart-container {
  /* This will align the button with the options column above it */
  grid-column: 2 / 3;
}

.add-to-cart-button {
  width: 100%;
}

@media (max-width: 1024px) {
  /* On stacked mobile layout, ensure it takes full width below the options */
  .add-to-cart-container {
      grid-column: 1 / 2;
  }
}

.button-text {
  /* Smooth transition for the opacity change */
  transition: opacity 0.2s ease-in-out;
}

.button-text.fade-in {
  opacity: 1;
}

.button-text.fade-out {
  opacity: 0;
}

.button-text.copied-text {
  /* Position the "Copied" text directly on top of the original text */
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%; /* Ensure it's centered within the button */
  text-align: center;
}

.action-buttons-container {
  /* This no longer needs grid properties */
  display: flex;
  gap: 1rem;
  margin-top: 2rem;
  border-top: 1px solid var(--border-color);
  padding-top: 2rem;
}

.action-button {
    /* --- REMOVE flex-grow: 1 --- */
    /* We will control width more explicitly */
    width: 50%; /* Make each button take up half the container width */
    
    border: 1px solid transparent;
    padding: 1rem;
    font-size: 1.1rem;
    font-weight: 600;
    border-radius: 8px;
    cursor: pointer;
    transition: transform 0.1s ease-out;
    will-change: transform;

    /* --- NEW: Ensure text is always centered --- */
    display: flex;
    justify-content: center;
    align-items: center;
}

/* ... (add-to-cart-button styles remain the same) ... */
.add-to-cart-button {
  background-color: var(--color-accent);
  color: white;
  border-color: var(--color-accent);
}
.add-to-cart-button:hover {
  background-color: var(--color-accent-hover);
  border-color: var(--color-accent-hover);
}

/* --- UPDATED: Share button styles --- */
.share-button {
  background-color: transparent;
  border-color: var(--border-color);
  color: var(--color-text);
  font-weight: 500;
  margin-top: 1rem;
  transition: background-color 0.1s linear, color 0.1s linear, border-color 0.1s linear;
}

.share-button:hover {
  background-color: var(--border-color);
  border-color: transparent;
}

/* --- UPDATED: "Copied!" state styles --- */
.share-button.copied {
  background-color: var(--color-primary);
  color: white;
  border-color: var(--color-primary);
  transform: translateY(0); 
  cursor: default;
}


@media (max-width: 1024px) {
    .action-buttons-container {
        grid-column: 1 / 2;
    }
}

.color-swatch.none {
  position: relative; /* Needed for the ::after pseudo-element */
  background-color: var(--color-background);
  /* Add a subtle border to define the circle */
  border: 1px solid var(--border-color); 
}

/* We use the ::after pseudo-element to create the slash */
.color-swatch.none::after {
  content: ''; /* A pseudo-element must have a content property */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;

  border-radius: 50%;
  overflow: hidden;

  /* 
    The Magic: Create a transparent-to-red-to-transparent gradient
    that runs diagonally. The red part is only 2px thick, creating a sharp line.
  */
  background: linear-gradient(
    to top right,
    transparent calc(50% - 1px), /* Transparent up to the middle */
    #e53e3e, /* A nice red color for the line itself */
    transparent calc(50% + 1px)  /* Transparent after the middle */
  );
}


.color-swatch.black {
  background-color: #222;
}

.color-swatch.grey {
  background-color: #cccccc;
}